swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching or updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved/updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error

  /transactions/{userId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Retrieve User Transactions
      description: API for retrieving transactions of a user
      parameters:
        - name: userId
          in: path
          description: User ID to fetch transactions for
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
          examples:
            application/json:
              - transactionId: "67890"
                accountId: "12345"
                accountName: "Checking Account"
                date: "2021-03-01"
                transactionType: "electronic"
                categoryId: "10"
                note: "Grocery Shopping"
                amount: 150.00
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /transactions/{userId}/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: API for updating a specific transaction of a user
      parameters:
        - name: userId
          in: path
          required: true
          type: string
          description: User ID associated with the transaction
        - name: transactionId
          in: path
          required: true
          type: string
          description: Transaction ID to be updated
        - in: body
          name: body
          required: true
          description: New category ID and note for the transaction
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
          examples:
            application/json:
              - transactionId: "67890"
                categoryId: "10"
                note: "Restaurant"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name

  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Transaction:
    type: object
    properties:
      accountId:
        type: string
        description: Unique identifier for the account to which the transaction belongs
      accountName:
        type: string
        description: Name of the account
      transactionId:
        type: string
        description: Unique identifier for the transaction
      date:
        type: string
        format: date
        description: Date when the transaction was made
      transactionType:
        type: string
        description: Type of the transaction (e.g., debit, credit)
      categoryId:
        type: string
        description: Identifier for the category of the transaction
      note:
        type: string
        description: Additional notes associated with the transaction
      amount:
        type: number
        format: double
        description: Monetary value of the transaction

  TransactionUpdate:
    type: object
    properties:
      categoryId:
        type: string
        description: New category ID for the transaction
      note:
        type: string
        description: Updated note for the transaction
